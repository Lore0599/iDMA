// Generated register defines for idma_reg32_2d_frontend

// Copyright information found in source file:
// Copyright 2022 ETH Zurich and University of Bologna.

// Licensing information found in source file:
// Licensed under Solderpad Hardware License, Version 0.51
// SPDX-License-Identifier: SHL-0.51

#ifndef _IDMA_REG32_2D_FRONTEND_REG_DEFS_
#define _IDMA_REG32_2D_FRONTEND_REG_DEFS_

#ifdef __cplusplus
extern "C" {
#endif
// Number of transfer events the DMA will handle autonomously
#define IDMA_REG32_2D_FRONTEND_PARAM_NUM_EVENTS 5

// Register width
#define IDMA_REG32_2D_FRONTEND_PARAM_REG_WIDTH 32

// Source Address
#define IDMA_REG32_2D_FRONTEND_SRC_ADDR_REG_OFFSET 0x0

// Destination Address
#define IDMA_REG32_2D_FRONTEND_DST_ADDR_REG_OFFSET 0x4

// Number of bytes
#define IDMA_REG32_2D_FRONTEND_NUM_BYTES_REG_OFFSET 0x8

// Configuration Register for DMA settings
#define IDMA_REG32_2D_FRONTEND_CONF_REG_OFFSET 0xc
#define IDMA_REG32_2D_FRONTEND_CONF_DECOUPLE_BIT 0
#define IDMA_REG32_2D_FRONTEND_CONF_DEBURST_BIT 1
#define IDMA_REG32_2D_FRONTEND_CONF_SERIALIZE_BIT 2
#define IDMA_REG32_2D_FRONTEND_CONF_TWOD_BIT 3

// Source Stride
#define IDMA_REG32_2D_FRONTEND_STRIDE_SRC_REG_OFFSET 0x10

// Destination Stride
#define IDMA_REG32_2D_FRONTEND_STRIDE_DST_REG_OFFSET 0x14

// Number of 2D repetitions
#define IDMA_REG32_2D_FRONTEND_NUM_REPETITIONS_REG_OFFSET 0x18

// DMA Status
#define IDMA_REG32_2D_FRONTEND_STATUS_REG_OFFSET 0x1c
#define IDMA_REG32_2D_FRONTEND_STATUS_BUSY_MASK 0xffff
#define IDMA_REG32_2D_FRONTEND_STATUS_BUSY_OFFSET 0
#define IDMA_REG32_2D_FRONTEND_STATUS_BUSY_FIELD \
  ((bitfield_field32_t) { .mask = IDMA_REG32_2D_FRONTEND_STATUS_BUSY_MASK, .index = IDMA_REG32_2D_FRONTEND_STATUS_BUSY_OFFSET })

// Next ID, launches transfer, returns 0 if transfer not set up properly.
#define IDMA_REG32_2D_FRONTEND_NEXT_ID_REG_OFFSET 0x20

// Get ID of finished transactions.
#define IDMA_REG32_2D_FRONTEND_DONE_REG_OFFSET 0x24

// RT event counts (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_RT_EVENT_COUNTS_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_RT_EVENT_COUNTS_FIELDS_PER_REG 1
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_MULTIREG_COUNT 5

// RT event counts
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_0_REG_OFFSET 0x28

// RT event counts
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_1_REG_OFFSET 0x2c

// RT event counts
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_2_REG_OFFSET 0x30

// RT event counts
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_3_REG_OFFSET 0x34

// RT event counts
#define IDMA_REG32_2D_FRONTEND_RT_EVENT_COUNTS_4_REG_OFFSET 0x38

// RT src addr (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_RT_SRC_ADDR_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_RT_SRC_ADDR_FIELDS_PER_REG 1
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_MULTIREG_COUNT 5

// RT src addr
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_0_REG_OFFSET 0x3c

// RT src addr
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_1_REG_OFFSET 0x40

// RT src addr
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_2_REG_OFFSET 0x44

// RT src addr
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_3_REG_OFFSET 0x48

// RT src addr
#define IDMA_REG32_2D_FRONTEND_RT_SRC_ADDR_4_REG_OFFSET 0x4c

// RT dst addr (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_RT_DST_ADDR_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_RT_DST_ADDR_FIELDS_PER_REG 1
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_MULTIREG_COUNT 5

// RT dst addr
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_0_REG_OFFSET 0x50

// RT dst addr
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_1_REG_OFFSET 0x54

// RT dst addr
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_2_REG_OFFSET 0x58

// RT dst addr
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_3_REG_OFFSET 0x5c

// RT dst addr
#define IDMA_REG32_2D_FRONTEND_RT_DST_ADDR_4_REG_OFFSET 0x60

// RT length (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_RT_LENGTH_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_RT_LENGTH_FIELDS_PER_REG 1
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_MULTIREG_COUNT 5

// RT length
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_0_REG_OFFSET 0x64

// RT length
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_1_REG_OFFSET 0x68

// RT length
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_2_REG_OFFSET 0x6c

// RT length
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_3_REG_OFFSET 0x70

// RT length
#define IDMA_REG32_2D_FRONTEND_RT_LENGTH_4_REG_OFFSET 0x74

// RT src 1d stride (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_RT_SRC_1D_STRIDE_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_RT_SRC_1D_STRIDE_FIELDS_PER_REG \
  1
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_MULTIREG_COUNT 5

// RT src 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_0_REG_OFFSET 0x78

// RT src 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_1_REG_OFFSET 0x7c

// RT src 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_2_REG_OFFSET 0x80

// RT src 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_3_REG_OFFSET 0x84

// RT src 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_SRC_1D_STRIDE_4_REG_OFFSET 0x88

// RT dst 1d stride (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_RT_DST_1D_STRIDE_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_RT_DST_1D_STRIDE_FIELDS_PER_REG \
  1
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_MULTIREG_COUNT 5

// RT dst 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_0_REG_OFFSET 0x8c

// RT dst 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_1_REG_OFFSET 0x90

// RT dst 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_2_REG_OFFSET 0x94

// RT dst 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_3_REG_OFFSET 0x98

// RT dst 1d stride
#define IDMA_REG32_2D_FRONTEND_RT_DST_1D_STRIDE_4_REG_OFFSET 0x9c

// RT num 1d reps (common parameters)
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_RT_NUM_1D_REPS_FIELD_WIDTH 32
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_RT_NUM_1D_REPS_FIELDS_PER_REG 1
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_MULTIREG_COUNT 5

// RT num 1d reps
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_0_REG_OFFSET 0xa0

// RT num 1d reps
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_1_REG_OFFSET 0xa4

// RT num 1d reps
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_2_REG_OFFSET 0xa8

// RT num 1d reps
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_3_REG_OFFSET 0xac

// RT num 1d reps
#define IDMA_REG32_2D_FRONTEND_RT_NUM_1D_REPS_4_REG_OFFSET 0xb0

#ifdef __cplusplus
}  // extern "C"
#endif
#endif  // _IDMA_REG32_2D_FRONTEND_REG_DEFS_
// End generated register defines for idma_reg32_2d_frontend